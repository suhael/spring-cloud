<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.0.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.suhael.spring.cloud.kinesis</groupId>
	<artifactId>producer</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>producer</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>


			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<extensions>true</extensions>
				<configuration>
					<portPropertyFile>${project.build.testOutputDirectory}/ports.properties</portPropertyFile>
					<images>
						<image>
							<alias>local-database</alias>
							<name>postgres:11.5-alpine</name>
							<run>
								<ports>
									<port>5432:5432</port>
								</ports>
								<env>
									<POSTGRES_DB>producer</POSTGRES_DB>
									<POSTGRESQL_ADMIN_PASSWORD>postgres</POSTGRESQL_ADMIN_PASSWORD>
								</env>
								<wait>
									<log>PostgreSQL init process complete; ready for start up.</log>
									<time>60000</time>
								</wait>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-container-clean</id>
						<phase>clean</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-container-start</id>
						<phase>process-classes</phase>
						<goals>
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>9.4.1212.jre7</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>database-setup</id>
						<goals>
							<goal>execute</goal>
						</goals>
						<phase>process-classes</phase>
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://localhost:5432/producer</url>
							<username>postgres</username>
							<password>postgres</password>
							<autocommit>true</autocommit>
							<srcFiles>
								<srcFile>src/main/resources/db/postgres/V1_0_0__CreateConsumerTables.sql</srcFile>
							</srcFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>



			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

		</plugins>
	</build>

</project>
